// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Restaurant model
model Restaurant {
  id             Int       @id @default(autoincrement())
  name           String
  location       String
  description    String
  email          String
  phone_number   String
  rating         Float
  profile_photo  String
  listings       Listing[] // Establishing opposite relation
  reviews        Review[]  // Establishing opposite relation
}

// FoodPantry model
model FoodPantry {
  id             Int       @id @default(autoincrement())
  name           String
  location       String
  description    String
  email          String
  phone_number   String
  profile_photo  String
  requests       Request[] // Establishing opposite relation
  reviews        Review[]  // Establishing opposite relation
}

// Listing model
model Listing {
  id              Int       @id @default(autoincrement())
  name            String
  quantity        Int
  unit            String
  description     String
  expiration_date String
  category        String
  photo_url       String
  restaurant_id   Int
  restaurant      Restaurant @relation(fields: [restaurant_id], references: [id])
  request_items   RequestItem[] // Establishing opposite relation
}

// Request model
model Request {
  id              Int       @id @default(autoincrement())
  date            DateTime
  status          String
  food_pantry_id  Int
  food_pantry     FoodPantry @relation(fields: [food_pantry_id], references: [id])
  request_items   RequestItem[] // Establishing opposite relation
}

// RequestItem model
model RequestItem {
  id          Int      @id @default(autoincrement())
  quantity    Int
  listing_id  Int
  listing     Listing  @relation(fields: [listing_id], references: [id])
  request_id  Int
  request     Request  @relation(fields: [request_id], references: [id])
}

// Review model
model Review {
  id              Int       @id @default(autoincrement())
  rating          Float
  date            DateTime
  description     String?
  food_pantry_id  Int
  food_pantry     FoodPantry @relation(fields: [food_pantry_id], references: [id])
  restaurant_id   Int
  restaurant      Restaurant @relation(fields: [restaurant_id], references: [id])
}